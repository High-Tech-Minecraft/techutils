plugins {
	id 'fabric-loom'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
	id 'maven-publish'
}

loom {
	accessWidenerPath = file("src/main/resources/techutils.accesswidener")
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "JitPack"
		url = "https://jitpack.io"
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Curseforge"
				url = "https://www.cursemaven.com"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = "Gradle Plugin Portal"
		url = "https://plugins.gradle.org/m2/"
	}
	maven {
		name = "Masa Maven"
		url = "https://masa.dy.fi/maven"
	}
	maven {
		name = "TerraformersMC"
		url "https://maven.terraformersmc.com/releases/"
	}
	maven {
		name = "WorldEdit Maven"
		url = "https://maven.enginehub.org/repo/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modApi("com.terraformersmc:modmenu:${project.modmenu_version}")
	modImplementation("fi.dy.masa.malilib:malilib-fabric-${project.malilib_version}")
	modImplementation("curse.maven:litematica-308892:${project.litematica_file}")
	modImplementation("curse.maven:tweakeroo-297344:${project.tweakeroo_file}")
	include api(annotationProcessor("com.github.LlamaLad7.mixinextras:mixinextras-fabric:${project.mixin_extras_version}"))

	modRuntimeOnly "com.sk89q.worldedit:worldedit-fabric-mc${project.worldedit_version}"
	testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"
}

processResources {
	inputs.property "version", project.mod_version
	inputs.property "id", project.mod_id
	inputs.property "name", project.mod_name
	inputs.property "minecraft_dependency", project.minecraft_dependency
	inputs.property "malilib_dependency", project.malilib_dependency
	inputs.property "litematica_dependency", project.litematica_dependency

	filesMatching("fabric.mod.json") {
		def valueMap = [
				"id"                   : project.mod_id,
				"name"                 : project.mod_name,
				"version"              : project.mod_version,
				"minecraft_dependency" : project.minecraft_dependency,
				"malilib_dependency"   : project.malilib_dependency,
				"litematica_dependency": project.litematica_dependency
		]
		expand valueMap
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
